<section class="bg-[rgb(0,0,0,0.2)] h-screen">
    <div
        class="absolute bg-[radial-gradient(circle,var(--color-primary-rgb)_10%,rgba(0,0,0,0)_80%)] w-full h-full z-1"
    >
    </div>
    <article
        class="text-white w-full h-screen flex flex-col items-center text-center p-4 sm:p-20 z-2 absolute"
    >
        <h1 class="text-4xl sm:text-5xl mt-10">Jose Á. Perea García</h1>
        <h2
            class="bg-text-color text-2xl sm:text-3xl mt-4 bg-gradient-to-l to-primary from-primary-dark animate-gradient"
        >
            Software Engineer & Monkey Lover
        </h2>

        <p class="text-white text-sm mt-6 sm:mt-10 text-balance">
            Si pones infinitos monos a programar, obtendrias en algún momento
            Google Maps.
        </p>

        <div
            class="flex flex-col sm:flex-row mt-6 sm:mt-10 justify-center items-center gap-4"
        >
            <div class="relative">
                <div
                    id="movementArea"
                    class="bg-white absolute w-[20%] h-[5.2%] left-[43.5%] top-[13%]"
                >
                    <img
                        id="eyes"
                        class="relative pointer-events-none w-[75%] h-[80%]"
                        src="/eyes.webp"
                    />
                </div>
                <img
                    id="me"
                    class="relative pointer-events-none w-48 sm:w-64"
                    src="/me/1.png"
                />
            </div>

            <div
                class="h-full w-100 border-1 rounded-2xl bg-transparent p-4 sm:p-5 text-left"
            >
                <p class="text-white text-xs sm:text-sm text-balance">
                    Hola, soy Jose Ángel Perea García, la persona mas maricona
                    del mundo.
                </p>
            </div>
        </div>
    </article>
</section>

<!-- <div
        class="absolute bottom-0 w-full h-50 bg-gradient-to-t from-white to-transparent"
    >
    </div> -->

<script>
    const container = document.getElementById("movementArea");
    const image = document.getElementById("eyes");

    let targetX = 0;
    let targetY = 0;
    let currentX = 0;
    let currentY = 0;
    const easing = 0.1; // Ajusta este valor para controlar la suavidad del movimiento

    document.addEventListener("mousemove", (event) => {
        if (!container) return;
        const rect = container.getBoundingClientRect();

        // Calcular las coordenadas relativas al contenedor
        if (!image) return;
        targetX = event.clientX - rect.left - image.offsetWidth / 2;
        targetY = event.clientY - rect.top - image.offsetHeight / 2;

        // Limitar las coordenadas dentro del contenedor
        targetX = Math.max(
            0,
            Math.min(targetX, rect.width - image.offsetWidth),
        );
        targetY = Math.max(
            0,
            Math.min(targetY, rect.height - image.offsetHeight),
        );
    });

    function animate() {
        // Interpolar suavemente hacia las coordenadas objetivo
        currentX += (targetX - currentX) * easing;
        currentY += (targetY - currentY) * easing;

        // Actualizar la posición de la imagen
        if (image) {
            image.style.left = currentX + "px";
            image.style.top = currentY + "px";
        }

        requestAnimationFrame(animate);
    }

    animate();
</script>

<script>
    const preloadImage = (src: string) =>
        new Promise((resolve, reject) => {
            const image = new Image();
            image.onload = resolve;
            image.onerror = reject;
            image.src = src;
        });

    await Promise.all(
        Array.from({ length: 60 }, (_, i) => {
            const index = i + 1;
            return preloadImage(`/me/${index}.png`);
        }),
    );

    const me = document.getElementById("me");

    let currentImageIndex = parseInt(me.src.split("/").pop().split(".")[0]);

    const movementArea = document.getElementById("movementArea");
    if (movementArea) {
        movementArea.classList.add("eyes-movement");
    }

    setInterval(() => {
        currentImageIndex = currentImageIndex < 60 ? currentImageIndex + 1 : 1;
        me.src = `/me/${currentImageIndex}.png`;
    }, 50);
</script>

<style>
    .eyes-movement {
        background-size: 200% 200%;
        animation: eyesAnimation 3s both infinite;
    }

    @keyframes eyesAnimation {
        30% {
            transform: translateY(6px);
            transform: translateX(5px);
        }
        50% {
            transform: translateY(0px);
        }

        70% {
            transform: translateX(0px);
        }
    }

    .animate-gradient {
        background-size: 200% 200%;
        animation: gradientAnimation 5s both infinite;
    }

    @keyframes gradientAnimation {
        0% {
            background-position: 0% 50%;
        }
        50% {
            background-position: 100% 50%;
        }
        100% {
            background-position: 0% 50%;
        }
    }

    .pathStyle {
        position: absolute;
        left: 43%;
        top: 30%;
        z-index: 1;
        fill: none;
    }

    .pathStyle path {
        stroke: white;
        width: 100%;
        height: 100%;
        top: -20%;
        left: -15%;
        stroke-width: 2;
        stroke-linecap: round;
        stroke-dasharray: 1000;
        stroke-dashoffset: 0;
        animation: pathAnimation 10s ease-in-out both;
        d: path("M50,50 L80,50");
    }

    @keyframes pathAnimation {
        0% {
            stroke-dashoffset: 1000;
        }
        100% {
            stroke-dashoffset: 0;
        }
    }
</style>
